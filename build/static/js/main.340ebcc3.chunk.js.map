{"version":3,"sources":["components/Input.js","components/ResultTiles.js","components/Result.js","store/actions/actionsTypes.js","store/actions/actions.js","components/EmiForm.js","store/reducer/inputReducer.js","store/reducer/resultReducer.js","App.js","reportWebVitals.js","index.js"],"names":["StyledInput","styled","input","StyledLable","label","Input","props","initialValue","onChange","handleChangeInput","e","console","log","target","value","test","className","type","ResultTiles","name","dangerouslySetInnerHTML","__html","Result","emiMonthly","emiExtra","emiAmount","options","chart","backgroundColor","title","text","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","showInLegend","series","data","y","responsive","rules","condition","maxWidth","highcharts","Highcharts","GET_RESULTS","SET_AMOUNT","SET_INTEREST","SET_TENURE","calculateResults","amount","interest","tenure","dispatch","results","interestRate","totalPayment","monthlyPayment","totalInterest","principal","parseFloat","calculatedInterest","calculatedPayments","x","Math","pow","monthly","isFinite","toFixed","calculateInterest","actionTypes","StyledCalculator","div","StyledBox","StyledSubmitButton","connect","state","result","setAmount","setInterest","setTenure","onCalculate","myRef","useRef","useEffect","onSubmit","preventDefault","current","scrollIntoView","behavior","ref","initialState","inputReducer","action","resultReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.340ebcc3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n    border: none;\n    border: solid #000 2px;\n    border-radius: 0;\n    text-align: center;\n    border-radius: 30px;\n    padding: 10px 0;\n\n    :focus {\n        box-shadow: none;\n        border-color: #f00;\n    }\n`;\n\nconst StyledLable = styled.label`\n    color: #777;\n    text-transform: uppercase;\n    font-weight: bold;\n`;\n\n\nconst Input = props => {\n    const { label, initialValue, onChange } = props;\n\n    const handleChangeInput = (e) => {\n        console.log(e.target.value);\n        const re = /^[+-]?([0-9]+\\.?[0-9]*|\\.[0-9]+)$/; //rules\n        if (e.target.value === \"\" || re.test(e.target.value)) {\n            onChange(e);\n        }\n    };\n\n    return (\n        <div className=\"form-group mb-3\">\n            <StyledLable className=\"control-label\">\n                {label}\n            </StyledLable>\n            <StyledInput type=\"text\" className=\"form-control\" value={initialValue} onChange={(e) => handleChangeInput(e)}  />\n        </div>\n    );\n};\n\n\nInput.propTypes = {\n    label: PropTypes.string.isRequired,\n    initialValue: PropTypes.any,\n    onChange: PropTypes.func\n};\n\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst ResultTiles = ({name, value}) => {\n    return (\n        <div className=\"result__tiles\">\n            <p>{name}</p>\n            <h2 dangerouslySetInnerHTML={{__html: value}}></h2>\n        </div>\n    );\n};\n\n\nResultTiles.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.any\n};\n\n\nexport default ResultTiles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport ResultTiles from './ResultTiles';\n\n\nconst Result = props => {\n\n    const { emiMonthly, emiExtra, emiAmount} = props;\n\n    const mapTotal = (emiExtra/emiAmount) * 100;\n    const mapPrincipal = 100 - ((emiExtra/emiAmount) * 100);\n\n    const options = {\n        chart: {\n          type: 'pie',\n          backgroundColor: 'rgba(0,0,0,0)'\n        },\n        title: {\n          text: 'Break-up of Total Payment'\n        },\n        accessibility: {\n            point: {\n                valueSuffix: '%'\n            }\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n                },\n                showInLegend: true\n            }\n        },\n        series: [{\n            name: 'Amount',\n            data: [\n                {\n                    name: 'Total Interest',\n                    y: mapTotal\n                },\n                {\n                    name: 'Principal Amount',\n                    y: mapPrincipal\n                }\n            ]\n        }],\n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 300\n                }\n            }]\n        }\n      };\n\n    return (\n        <div  className=\"result__dashboard\">\n            <h1 className=\"text-center\">Result</h1>\n            <div className=\"\">\n                <div className=\"result__left text-center\">\n                    <ResultTiles name=\"Loan EMI\" value={`&#8377;` +emiMonthly+``} />\n                    <ResultTiles name=\"Total Interest\" value={`&#8377;` +emiExtra+``} />\n                    <ResultTiles name=\"Total (Principal + Interest)\" value={`&#8377;` +emiAmount+``} />\n                </div>\n                <div className=\"result__right\">\n                    <HighchartsReact highcharts={Highcharts} options={options} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nResult.propTypes = {\n    emiMonthly: PropTypes.number,\n    emiExtra: PropTypes.number,\n    emiAmount: PropTypes.number\n};\n\n\nexport default Result;\n","export const CALCULATE_EMI = 'CALCULATE_EMI';\nexport const GET_RESULTS = 'GET_RESULTS';\nexport const SET_AMOUNT = 'SET_AMOUNT';\nexport const SET_INTEREST = 'SET_INTEREST';\nexport const SET_TENURE = 'SET_TENURE';","import * as actionTypes from './actionsTypes';\n\nconst calculateInterest = (amount, interestRate, tenure) => {\n    \n    const principal = parseFloat(amount);\n    const calculatedInterest = parseFloat(interestRate) / 100 / 12;\n    const calculatedPayments = parseFloat(tenure) * 12;\n\n    let totalPayment;\n    let monthlyPayment;\n    let totalInterest;\n\n    const x = Math.pow(1 + calculatedInterest, calculatedPayments);\n    const monthly = (principal*x*calculatedInterest)/(x-1);\n    \n    if(isFinite(monthly)) {\n        monthlyPayment = monthly.toFixed(0);\n        totalPayment = (monthly * calculatedPayments).toFixed(0);    \n        totalInterest = (totalPayment - principal).toFixed(0);\n      }\n    \n    return { \n        totalPayment, \n        monthlyPayment,\n        totalInterest\n    }\n};\n\n\nexport const saveResults = (emiMonthly, emiAmount, emiExtra) => {\n    return {\n        type: actionTypes.GET_RESULTS,\n        emiMonthly,\n        emiAmount,\n        emiExtra\n    }\n}\n\n\n\nexport const calculateResults = (amount, interest, tenure) => {\n    return (dispatch) => {\n        if (amount && interest && tenure) {\n            const results = calculateInterest(amount, interest, tenure);\n            const totalPayment = results.totalPayment;\n            const monthlyPayment = results.monthlyPayment;\n            const totalInterest = results.totalInterest;\n\n            if (totalPayment && totalPayment) {\n                dispatch(saveResults(monthlyPayment, totalPayment, totalInterest))\n            }\n\n        }\n    }\n}\n\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { connect } from \"react-redux\";\n\nimport Input from './Input';\nimport Result from './Result';\nimport {calculateResults } from '../store/actions/actions';\n\n\nconst StyledCalculator = styled.div`\n    min-height:100vh;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    background: rgb(255, 139, 38);\n    text-align: center;\n\n    @media (max-width: 450px){\n      display: block;\n    }\n`;\n\nconst StyledBox = styled.div`\n    width: 450px;\n    padding: 20px;\n    max-width: 90%;\n    margin: auto;\n    border-radius: 10px;\n    background: #fff;\n    box-shadow: 0 0 50px rgba(0,0,0,0.1);\n`;\n\nconst StyledSubmitButton = styled.input`\n    width: 100%;\n    border:solid #000 2px;\n    border-radius: 50px;\n    padding: 10px 0;\n    background: #000;\n    color: #fff;\n    font-weight: bold;\n    transition: 0.5s;\n`;\n\nconst EmiForm = (props) => {\n\n    const {\n        amount,\n        interest,\n        tenure,\n        emiMonthly,\n        emiAmount,\n        emiExtra\n      } = props;\n\n      const myRef = useRef(null);\n\n      useEffect(() => {\n        props.onCalculate(amount, interest, tenure);\n        return () => {\n        };\n      }, []);\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        myRef.current.scrollIntoView({ behavior: \"smooth\" })\n        props.onCalculate(amount, interest, tenure);\n      };\n\n    return (\n        <div>\n            <StyledCalculator>\n                <StyledBox>\n                    <h1 className=\"mb-5\">EMI Calculator</h1>\n                    <form onSubmit={submitForm}>\n                        <Input label=\"Amount\" initialValue={amount} onChange={e => props.setAmount(e)} />\n                        <Input label=\"Interest\" initialValue={interest} onChange={e => props.setInterest(e)} />\n                        <Input label=\"Tenure (In years)\" initialValue={tenure} onChange={e => props.setTenure(e)} />\n                        <StyledSubmitButton type=\"submit\" value=\"CALCULATE\" />\n                    </form>\n                </StyledBox>\n\n                <div ref={myRef} className=\"result__area\">\n                  <Result emiMonthly={emiMonthly} emiExtra={emiExtra} emiAmount={emiAmount} />\n              </div>\n              \n            </StyledCalculator>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = state => {\n    const { amount, interest, tenure } = state.input;\n    const { emiMonthly, emiAmount, emiExtra } = state.result;\n    return {\n      amount,\n      interest,\n      tenure,\n      emiMonthly,\n      emiAmount,\n      emiExtra\n    };\n  };\n\n\n  const mapDispatchToProps = dispatch => {\n    return {\n      setAmount: e => dispatch({ type: \"SET_AMOUNT\", amount: e.target.value }),\n      setInterest: e =>\n        dispatch({ type: \"SET_INTEREST\", interest: e.target.value }),\n      setTenure: e => dispatch({ type: \"SET_TENURE\", tenure: e.target.value }),\n      onCalculate: (amount, interest, tenure) =>\n        dispatch(calculateResults(amount, interest, tenure))\n    };\n  };\n\n\nEmiForm.propTypes = {\n\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(EmiForm);","import * as actionTypes from \"../actions/actionsTypes\";\n\nconst initialState = { \n    amount: 1000,\n    interest: 7.5,\n    tenure: 5\n }\n\n\n export const inputReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case actionTypes.SET_AMOUNT:\n        return {\n          ...state,\n          amount: action.amount\n        };\n      case actionTypes.SET_INTEREST:\n        return {\n          ...state,\n          interest: action.interest\n        };\n      case actionTypes.SET_TENURE:\n        return {\n          ...state,\n          tenure: action.tenure\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default inputReducer;","import * as actionTypes from \"../actions/actionsTypes\";\n\nconst initialState = { \n    emiMonthly: 0,\n    emiAmount: 0,\n    emiExtra: 0\n }\n\n const resultReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GET_RESULTS:\n            return {\n                ...state,\n                emiMonthly: action.emiMonthly,\n                emiAmount: action.emiAmount,\n                emiExtra: action.emiExtra\n            }\n        default:\n            return state\n    }\n }\n export default resultReducer;","import './App.css';\nimport EmiForm from './components/EmiForm';\nimport { Provider } from \"react-redux\";\n\nimport inputReducer from \"./store/reducer/inputReducer\";\nimport resultReducer from \"./store/reducer/resultReducer\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n\nconst rootReducer = combineReducers({\n  input: inputReducer,\n  result: resultReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div>\n        <EmiForm />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}